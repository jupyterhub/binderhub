# This is a GitHub workflow defining a set of jobs with a set of steps.
# ref: https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions
#
name: Tests

on:
  pull_request:
    paths-ignore:
      - "**.md"
      - "**.rst"
      - "docs/**"
      - "examples/**"
      - ".github/workflows/**"
      - "!.github/workflows/test.yml"
  push:
    paths-ignore:
      - "**.md"
      - "**.rst"
      - "docs/**"
      - "examples/**"
      - ".github/workflows/**"
      - "!.github/workflows/test.yml"
    branches-ignore:
      - "dependabot/**"
      - "pre-commit-ci-update-config"
      - "update-*"
  workflow_dispatch:

jobs:
  tests:
    runs-on: ubuntu-22.04
    timeout-minutes: 10

    strategy:
      fail-fast: false
      matrix:
        k3s-channel:
          - v1.26
          - v1.27
        test:
          - main
        test-variation:
          - ""

    steps:
      - uses: actions/checkout@v3
        with:
          # chartpress requires the full history
          fetch-depth: 0

      - uses: jupyterhub/action-k3s-helm@v3
        with:
          k3s-channel: ${{ matrix.k3s-channel }}
          helm-version: ${{ matrix.helm-version }}
          metrics-enabled: false
          traefik-enabled: false
          docker-enabled: true

      - name: Setup OS level dependencies
        run: |
          sudo apt-get update
          sudo apt-get install --yes \
            build-essential \
            curl \
            libcurl4-openssl-dev \
            libssl-dev

      - uses: actions/setup-node@v3
        id: setup-node
        with:
          node-version: "18"

      - name: Run webpack to build static assets
        run: |
          npm install
          npm run webpack

      - uses: actions/setup-python@v4
        id: setup-python
        with:
          python-version: "3.11"

      - name: Setup Python package dependencies
        run: |
          pip install -r dev-requirements.txt -r helm-chart/images/binderhub/requirements.txt
          pip install .

      - run: pip freeze

      - name: Install JupyterHub chart
        run: |
          ./testing/local-binder-k8s-hub/install-jupyterhub-chart

      - name: Await and curl JupyterHub
        run: |
          . ci/common
          await_jupyterhub

          echo curl http://localhost:30902/hub/api/ should print the JupyterHub version
          curl http://localhost:30902/hub/api/ --max-time 5 --retry 5 --retry-delay 1 --retry-connrefused --fail-with-body --retry-all-errors

      - name: Run main tests
        run: pytest -m "not auth" -v --maxfail=1 --cov binderhub --durations=10 --color=yes

      # GitHub Action reference: https://github.com/jupyterhub/action-k8s-namespace-report
      - name: Kubernetes namespace report
        uses: jupyterhub/action-k8s-namespace-report@v1
        if: always()
        with:
          important-workloads: >
            deploy/binder
            deploy/hub
            deploy/proxy
