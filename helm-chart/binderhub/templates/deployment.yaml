apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: binder
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    rollingUpdate:
        {{- if eq .Values.replicas 1.0 }}
        maxSurge: 1
        maxUnavailable: 0
        {{- end }}
  template:
    metadata:
      labels:
        app: binder
        name: binder
        component: binder
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
        {{ if .Values.deployment.labels -}}
        # Because toYaml + indent is super flaky
        {{ range $key, $value := .Values.deployment.labels -}}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
        {{- end }}
      annotations:
        # This lets us autorestart when the configmap changes!
        checksum/config-map: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
    spec:
      {{ if .Values.initContainers -}}
      initContainers:
{{ toYaml .Values.initContainers | indent 6 }}
      {{- end }}
      {{- if .Values.jupyterhub.scheduling.podPriority.enabled }}
      priorityClassName: {{ .Release.Name }}-default-priority
      {{- end }}
      nodeSelector: {{ toJson .Values.nodeSelector }}
      {{- if .Values.rbac.enabled }}
      serviceAccountName: binderhub
      {{- end }}
      volumes:
      - name: config
        configMap:
          name: binder-config
      - name: secret-config
        secret:
          secretName: binder-secret
      {{ if .Values.config.BinderHub.use_registry -}}
      - name: docker-secret
        secret:
          secretName: binder-push-secret
      {{ else -}}
      - name: docker-socket
        hostPath:
          path: /var/run/docker.sock
      {{- end }}
      {{ if .Values.extraVolumes }}
{{ toYaml .Values.extraVolumes | indent 6 }}
      {{ end }}
      containers:
      - name: binder
        image: {{ .Values.image.name }}:{{ .Values.image.tag }}
        volumeMounts:
          - mountPath: /etc/binderhub/config/
            name: config
          - mountPath: /etc/binderhub/secret/
            name: secret-config
          {{ if .Values.config.BinderHub.use_registry -}}
          - mountPath: /root/.docker
            name: docker-secret
            readOnly: true
          {{ else -}}
          - mountPath: /var/run/docker.sock
            name: docker-socket
          {{- end }}
          {{ if .Values.extraVolumeMounts }}
{{ toYaml .Values.extraVolumeMounts | indent 10 }}
          {{ end }}
        resources:
{{ toYaml .Values.resources | indent 12}}
        imagePullPolicy: IfNotPresent
        env:
        - name: BUILD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: JUPYTERHUB_API_TOKEN
          valueFrom:
            secretKeyRef:
              name: binder-secret
              key: "binder.hub-token"
        {{- if .Values.config.BinderHub.auth_enabled }}
        - name: JUPYTERHUB_API_URL
          value: {{ (print (.Values.config.BinderHub.hub_url | trimSuffix "/") "/hub/api/") }}
        - name: JUPYTERHUB_BASE_URL
          value: {{ .Values.jupyterhub.hub.baseUrl | quote }}
        - name: JUPYTERHUB_CLIENT_ID
          value: {{ .Values.jupyterhub.hub.services.binder.oauth_client_id | quote}}
        {{- if .Values.jupyterhub.hub.services.binder.oauth_redirect_uri }}
        - name: JUPYTERHUB_OAUTH_CALLBACK_URL
          value: {{ .Values.jupyterhub.hub.services.binder.oauth_redirect_uri | quote}}
        {{- end }}
        {{- end }}
        ports:
          - containerPort: 8585
            name: binder
